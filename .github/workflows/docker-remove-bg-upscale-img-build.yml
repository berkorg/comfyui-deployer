name: Docker Remove Background Build

on:
  workflow_dispatch:
  push:
   branches: [ "remove-background" ]
    
env:
  UBUNTU_VERSION: 22.04
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1
  PROJECT_ID: ai-product-photos
  REGION: us-central1
  GAR_LOCATION: us-central1-docker.pkg.dev/ai-product-photos/ai-product-photos-repo
  IMAGE_NAME: us-central1-docker.pkg.dev/ai-product-photos/ai-product-photos-repo/ai-product-photo-img:rmbg-9

jobs:
  nvidia-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build:
          # Undeclared SHA tags with latest commit from master branch
          # Only building periodic sha tagged images
          - {latest: "true", sha: "719fb2c", python: "3.10", pytorch: "2.2.2", cuda: "11.8.0-runtime"}
          # - {latest: "false", sha: "719fb2c", python: "3.10", pytorch: "2.2.2", cuda: "11.8.0-runtime"}
    steps:
      -
        name: Free Space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Permissions fixes
        run: |
          reponame="$(basename ${GITHUB_REPOSITORY})"
          target="${HOME}/work/${reponame}/${reponame}/build/COPY*"
          chmod -R ug+rwX ${target}
      
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"

      -
        name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: us-central1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.SERVICE_ACCOUNT_KEY }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: "Docker auth"
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
      -
        name: Set tags
        run: |
          img_path="ghcr.io/${{ env.PACKAGE_NAME }}"
          if [[ -z '${{ matrix.build.sha }}' ]]; then
              COMFYUI_SHA="$(curl -fsSL "https://api.github.com/repos/comfyanonymous/ComfyUI/commits/master" | jq -r '.sha[0:7]')"
          else
              COMFYUI_SHA="${{ matrix.build.sha }}"
          fi
          [ -z "$COMFYUI_SHA" ] && { echo "Error: COMFYUI_SHA is empty. Exiting script." >&2; exit 1; }
          echo "COMFYUI_SHA=${COMFYUI_SHA}" >> ${GITHUB_ENV}

          base_tag="cuda-${{ matrix.build.cuda }}-${{ env.UBUNTU_VERSION }}-remove-duplicate-sdxl"

          # Latest tags OR sha - Not both
          if [[ ${{ matrix.build.latest }} == "true" ]]; then
              echo "Marking latest"
              TAGS="${img_path}:${base_tag}, ${img_path}:latest, ${img_path}:latest-jupyter, ${img_path}:latest-cuda, ${img_path}:latest-cuda-jupyter"
          else
              TAGS="${img_path}:${base_tag}-${COMFYUI_SHA}"
          fi
          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}

      - name: Build image
        run: docker build ./build --file ./build/Dockerfile --tag ${{ env.IMAGE_NAME }} --build-arg IMAGE_BASE=ghcr.io/berkorg/comfyui-deployer:cuda-11.8.0-runtime-22.04-719fb2c --build-arg PYTHON_VERSION=${{ matrix.build.python }} --build-arg PYTORCH_VERSION=${{ matrix.build.pytorch }} --build-arg COMFYUI_SHA=${{ env.COMFYUI_SHA }}

      - name: Push image
        run: docker push ${{ env.IMAGE_NAME }} 

      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: build
      #     build-args: |
      #       IMAGE_BASE=ghcr.io/berkorg/comfyui-deployer:cuda-11.8.0-runtime-22.04-719fb2c
      #       PYTHON_VERSION=${{ matrix.build.python }}
      #       PYTORCH_VERSION=${{ matrix.build.pytorch }}
      #       COMFYUI_SHA=${{ env.COMFYUI_SHA }}
      #     push: true
      #     provenance: false
      #     tags: ${{ env.TAGS }}
